Get the PID for the entry level exe and only run the program if it is not running.

When actually running the program (condition above is false), first create an entry level exe PID.

Then, run the loading console exe (not the startStop exe).

In this loading exe, create a PID for itself.

Then subprocess the startStop exe.

Then, start the 'Loading...' loop (dot every 0.7 seconds or so).

Then, in the startStop exe, just before the startProgram or stopProgram lines will be run, kill the loading exe.

Then, in the startProgram and stopProgram exes, when either the Start of Ok buttons are pressed, open a console and print the required stuff.

For the Start program, have it print:
	> The program will now run in the background. [relevant pause]
	> A word and its definition will appear daily at .... [relevant pause]
	> To stop the program, edit the word list, or change the time in which the word appears, run the main program (Daily Word Definition) again. [relevant pause + ending pause]
	> ---- Goodbye ----
	[quickish pause]

For the stop program, for the edit time part, have it print:
	> The program is still running.
	> The daily word and definition will now appear at .... [longish pause]
	> ---- Goodbye ----
	[quickish pause]
	
For the stop program, for the ending of the program, have it print:
	> The program has now stopped running [longish pause]
	> ---- Goodbye ----
	[quickish pause]



